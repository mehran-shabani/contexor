name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  backend:
    name: Backend (Django)
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: cg
          POSTGRES_PASSWORD: cg
          POSTGRES_DB: cg
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U cg" --health-interval=10s
          --health-timeout=5s --health-retries=5
      redis:
        image: redis:7
        ports:
          - 6379:6379
    env:
      DATABASE_URL: postgres://cg:cg@localhost:5432/cg
      REDIS_URL: redis://localhost:6379/0
      DJANGO_SECRET_KEY: test_key
      OPENAI_API_KEY: dummy
      OPENAI_BASE_URL: https://api.openai.com/v1
      KAVENEGAR_API_KEY: dummy
      JWT_SIGNING_KEY: test_jwt
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: backend/requirements.txt
      - name: Install deps
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Django checks & migrations
        working-directory: backend
        run: |
          python manage.py check
          python manage.py migrate --noinput
      - name: Run tests
        working-directory: backend
        run: |
          if command -v pytest &> /dev/null; then
            pytest -q
          elif python -m pytest --version &> /dev/null; then
            python -m pytest -q
          else
            echo "⚠️  pytest not installed, skipping tests"
            exit 0
          fi

  frontend:
    name: Frontend (Next.js)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package.json
      - name: Install deps
        working-directory: frontend
        run: npm ci || npm i
      - name: Install Playwright browsers
        working-directory: frontend
        run: npx playwright install --with-deps chromium
      - name: Build
        working-directory: frontend
        env:
          NEXT_PUBLIC_BACKEND_URL: http://localhost:8000
        run: npm run build
      - name: Test
        working-directory: frontend
        continue-on-error: true
        run: npm test --if-present
